@model MvcFolhetos.Models.Folhetos

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Folhetos</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.FolhetosID)

    <div class="form-group">
        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="alert alert-info alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <strong>Aviso!</strong> Ao efetuar novo upload de imagens os folhetos anteriores serão apagados.
    </div>
    @for (var i = 1; i < @ViewBag.nPaginas + 1; i++)
    {
        <img srcset="@Url.Content("~/imagens/folheto" + ViewBag.id +"/pagina" + @i + ".jpeg")" width="100" height="147" />
    }
    <label>Upload de novas imagens:</label>
    <div class="form-group">
        <input type="file"
               name="files"
               style="color:blue;"
               accept=".jpeg" multiple />
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DataInic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataInic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataInic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataFim, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataFim, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataFim, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NomeEmpresa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NomeEmpresa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomeEmpresa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <span class="control-label col-md-2">Tags associados ao folheto</span>
        <div class="col-md-10">
            @{ string selected = "";}
            @foreach (var item in ViewBag.ListaDeTags)
            {
                selected = "";
                foreach (int opcaoID in Model.ListaDeTags.Select(b => b.ID))
                {
                    if (item.ID == opcaoID) { selected = "checked"; }
                }
                <input type="checkbox" name="opcoesEscolhidasDeTags" value="@item.ID" @selected /> @item.Info
                <br />
            }
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
